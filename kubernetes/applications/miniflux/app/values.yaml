# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/library/common/values.schema.json
---
controllers:
  miniflux:
    strategy: RollingUpdate
    containers:
      app:
        image:
          repository: ghcr.io/miniflux/miniflux
          tag: 2.2.11-distroless@sha256:0b6acdc4d535f793009844423dfcb997047e1fc420be47a3f5ab2602c6581a1e
        env:
          OAUTH2_PROVIDER: oidc
          OAUTH2_CLIENT_ID:
            valueFrom:
              secretKeyRef:
                name: oidc-secret
                key: client-id
          OAUTH2_CLIENT_SECRET:
            valueFrom:
              secretKeyRef:
                name: oidc-secret
                key: client-secret
          OAUTH2_REDIRECT_URL: https://miniflux.costanza.cloud/oauth2/oidc/callback
          OAUTH2_OIDC_DISCOVERY_ENDPOINT: https://pid.costanza.cloud
          OAUTH2_OIDC_PROVIDER_NAME: PocketID
          OAUTH2_USER_CREATION: "1" # optional, if you want nes users to be created automatically
          DISABLE_LOCAL_AUTH: "0" # optional, if you want to disable local authentication
          ADMIN_USERNAME:
            valueFrom:
              secretKeyRef:
                name: miniflux-admin
                key: username
          ADMIN_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: miniflux-admin
                key: password
          BASE_URL: https://miniflux.costanza.cloud/
          CREATE_ADMIN: "1"
          DATABASE_URL:
            valueFrom:
              secretKeyRef:
                name: postgres-user
                key: url
          LOG_DATE_TIME: "1"
          POLLING_FREQUENCY: "15"
          POLLING_SCHEDULER: entry_frequency
          PORT: &port 80
          RUN_MIGRATIONS: "1"
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /healthcheck
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 512Mi

defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    seccompProfile: { type: RuntimeDefault }

service:
  app:
    controller: miniflux
    ports:
      http:
        port: *port
