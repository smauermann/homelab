fullnameOverride: victoria-metrics-stack

victoria-metrics-operator:
  enabled: true
  crds:
    plain: true
    cleanup:
      enabled: true
  serviceMonitor:
    enabled: true
  operator:
    # -- By default, operator converts prometheus-operator objects.
    disable_prometheus_converter: false
    # -- Compare-options and sync-options for prometheus objects converted by operator for properly use with ArgoCD
    prometheus_converter_add_argocd_ignore_annotations: true
    # -- Enables ownership reference for converted prometheus-operator objects,
    # it will remove corresponding victoria-metrics objects in case of deletion prometheus one.
    enable_converter_ownership: true
    # -- Enables custom config-reloader, bundled with operator.
    # It should reduce  vmagent and vmauth config sync-time and make it predictable.
    useCustomConfigReloader: false
  env:
    # EnableStrictSecurity will add default securityContext to pods and containers created by operator
    - name: VM_ENABLESTRICTSECURITY
      value: "true"

defaultDashboards:
  enabled: true
  defaultTimezone: utc
  labels:
    grafana_dashboard: ""

defaultRules:
  create: true

external:
  grafana:
    host: grafana.costanza.cloud

vmsingle:
  enabled: true
  spec:
    retentionPeriod: "14d"
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 1360Mi
    storage:
      storageClassName: longhorn-single-replica
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
  ingress:
    enabled: true
    ingressClassName: cilium
    annotations:
      gethomepage.dev/description: Metrics
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: victoriametrics.png
      gethomepage.dev/name: VictoriaMetrics
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=vmsingle"
    hosts:
      - &vmHost vm.costanza.cloud
    tls:
      - hosts:
          - *vmHost

alertmanager:
  enabled: true
  spec:
    replicaCount: 1
    selectAllByDefault: true
    # -- (string) If this one defined, it will be used for alertmanager configuration and config parameter will be ignored
    configSecret: ""
  config:
    route:
      receiver: "blackhole"
    receivers:
      - name: blackhole
  ingress:
    enabled: true
    ingressClassName: cilium
    annotations:
      gethomepage.dev/description: Alerts
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: victoriametrics.png
      gethomepage.dev/name: VictoriaMetrics Alertmanager
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=vmalertmanager"
    hosts:
      - &amHost alertmanager.costanza.cloud
    tls:
      - hosts:
          - *amHost

vmalert:
  enabled: true
  spec:
    port: "8080"
    selectAllByDefault: true
    evaluationInterval: 20s
    extraArgs:
      http.pathPrefix: "/"
  ingress:
    enabled: true
    ingressClassName: cilium
    annotations:
      gethomepage.dev/description: Alerts
      gethomepage.dev/enabled: "false"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: victoriametrics.png
      gethomepage.dev/name: VictoriaMetrics Alert
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=vmalert"
    hosts:
      - &vmAlertHost vmalert.costanza.cloud
    tls:
      - hosts:
          - *vmAlertHost

vmagent:
  enabled: true
  spec:
    selectAllByDefault: true
    scrapeInterval: 30s
    scrapeTimeout: 10s
    replicaCount: 1
    resources:
      requests:
        cpu: 500m
        memory: 100Mi
      limits:
        memory: 750Mi
  ingress:
    enabled: true
    ingressClassName: cilium
    annotations:
      gethomepage.dev/description: Metrics Scraping
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: victoriametrics.png
      gethomepage.dev/name: VictoriaMetrics Agent
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=vmagent"
    hosts:
      - &vmAgentHost vmagent.costanza.cloud
    tls:
      - hosts:
          - *vmAgentHost

grafana:
  enabled: false
  sidecar:
    datasources:
      enabled: true

prometheus-node-exporter:
  enabled: true

kube-state-metrics:
  enabled: true

kubelet:
  enabled: true
  vmScrape:
    spec:
      # drop high cardinality label and useless metrics for cadvisor and kubelet
      metricRelabelConfigs:
        # Drop less useful container CPU metrics.
        - sourceLabels: [__name__]
          action: drop
          regex: 'container_cpu_(cfs_throttled_seconds_total|load_average_10s|system_seconds_total|user_seconds_total)'
        # Drop less useful / always zero container memory metrics.
        - sourceLabels: [__name__]
          action: drop
          regex: 'container_memory_(failures_total|mapped_file|swap)'
        # Drop less useful container process metrics.
        - sourceLabels: [__name__]
          action: drop
          # regex: 'container_(file_descriptors|tasks_state|threads_max)'
          regex: 'container_(tasks_state|threads_max)'
        # Drop less useful container filesystem metrics.
        - sourceLabels: [__name__]
          action: drop
          regex: 'container_fs_(io_current|io_time_seconds_total|io_time_weighted_seconds_total|reads_merged_total|sector_reads_total|sector_writes_total|writes_merged_total)'
        # Drop less useful container blkio metrics.
        - sourceLabels: [__name__]
          action: drop
          regex: 'container_blkio_device_usage_total'
        # Drop container spec metrics that overlap with kube-state-metrics.
        - sourceLabels: [__name__]
          action: drop
          regex: 'container_spec.*'
        # Drop cgroup metrics with no pod.
        - sourceLabels: [id, pod]
          action: drop
          regex: '.+;'
        - action: drop
          sourceLabels: [__name__]
          regex: prober_probe_duration_seconds_bucket
        # Drop high-cardinality labels.
        - action: labeldrop
          regex: (uid|id|name|pod_uid|interface)
        - action: drop
          sourceLabels: [__name__]
          regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

kubeApiServer:
  enabled: true

kubeControllerManager:
  enabled: true

coreDns:
  enabled: true

kubeEtcd:
  enabled: true
  endpoints:
    - 192.168.178.100
    - 192.168.178.101
    - 192.168.178.102
  service:
    port: 2381
    targetPort: 2381

kubeScheduler:
  enabled: true

prometheus-operator-crds:
  enabled: true
