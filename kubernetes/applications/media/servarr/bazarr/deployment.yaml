apiVersion: apps/v1
kind: Deployment
metadata:
  name: bazarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: bazarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bazarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2501
        runAsGroup: 2501
        fsGroup: 2501
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: bazarr
          image: ghcr.io/home-operations/bazarr:1.5.2@sha256:e569e3dd344a9a83e948f12eb7fd2c58ab051d0af5507ba69cacfdb5119a8362
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ "ALL" ]
          ports:
            - name: http
              containerPort: 6767
          envFrom:
            - configMapRef:
                name: common-env
                optional: true
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /app/data
            - name: cache
              mountPath: /config/cache
              subPath: cache
            - name: log
              mountPath: /config/log
              subPath: log
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 1Gi
          livenessProbe: &probe
            httpGet:
              path: /health
              port: 6767
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe: *probe
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: bazarr-config
        - name: media
          persistentVolumeClaim:
            claimName: servarr-media-nfs
        - name: cache
          emptyDir: {}
        - name: log
          emptyDir: {}
