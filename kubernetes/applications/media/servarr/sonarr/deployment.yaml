apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sonarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2501
        runAsGroup: 2501
        fsGroup: 2501
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: sonarr
          # renovate: datasource=docker
          image: ghcr.io/home-operations/sonarr:4.0.14.2938@sha256:acd5416ab9c36d017687820a32f09d09a4e25a5754aa5ebeae2e7c63d7609c13
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ "ALL" ]
          ports:
            - name: http
              containerPort: 8989
          envFrom:
            - configMapRef:
                name: common-env
                optional: true
          volumeMounts:
            - name: config
              mountPath: /config
            - name: media
              mountPath: /app/data
            - name: tmp
              mountPath: /tmp
          resources:
            requests:
              cpu: 50m
              memory: 384Mi
            limits:
              cpu: 1000m
              memory: 512Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: media
          persistentVolumeClaim:
            claimName: servarr-media-nfs
        - name: tmp
          emptyDir: {}
