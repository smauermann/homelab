fullnameOverride: prometheus
cleanPrometheusOperatorObjectNames: true

crds:
  enabled: true

## Create default rules for monitoring the cluster
defaultRules:
  create: true
  rules:
    alertmanager: false
    etcd: false
    configReloaders: false
    k8sContainerMemoryCache: false
    k8sContainerMemorySwap: false
    k8sContainerMemoryWorkingSetBytes: false
    kubeApiserverAvailability: false
    kubeApiserverBurnrate: false
    kubeApiserverHistogram: false
    kubeApiserverSlos: false
    kubeControllerManager: false
    kubelet: false
    kubeProxy: false
    kubePrometheusNodeRecording: false
    kubeSchedulerAlerting: false
    kubeSchedulerRecording: false
    nodeExporterAlerting: false
    nodeExporterRecording: false
    windows: false

    general: true
    k8sContainerCpuUsageSecondsTotal: true
    k8sContainerMemoryRss: true
    k8sContainerResource: true
    k8sPodOwner: true
    kubePrometheusGeneral: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeStateMetrics: true
    network: true
    node: true
    prometheus: true
    prometheusOperator: true

alertmanager:
  enabled: false

grafana:
  enabled: true
  defaultDashboardsTimezone: "Europe/Berlin"

  ingress:
    enabled: true
    ingressClassName: cilium
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      gethomepage.dev/description: Metrics Visualization
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: grafana.png
      gethomepage.dev/name: Grafana
    hosts:
      - grafana.costanza.cloud
    tls:
      - secretName: grafana-general-tls
        hosts:
        - grafana.costanza.cloud

    datasources:
      alertmanager:
        enabled: false

# disable scraping of k8s components
kubeApiServer:
  enabled: false
kubeControllerManager:
  enabled: false
coreDns:
  enabled: false
kubeEtcd:
  enabled: false
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false

kubeStateMetrics:
  enabled: true

## Deploy node exporter as a daemonset to all nodes
nodeExporter:
  enabled: true
  operatingSystems:
    linux:
      enabled: true
    darwin:
      enabled: false

prometheus-node-exporter:
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$

prometheusOperator:
  enabled: true
  tls:
    enabled: false
  revisionHistoryLimit: 2

  admissionWebhooks:
    enabled: false

  kubeletService:
    enabled: false

prometheus:
  enabled: true

  ingress:
    enabled: true
    ingressClassName: cilium

    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      gethomepage.dev/description: Metrics Collection
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/icon: prometheus.png
      gethomepage.dev/name: Prometheus
      gethomepage.dev/widget.type: prometheus
      gethomepage.dev/widget.url: "http://prometheus-prometheus.monitoring:9090"
      gethomepage.dev/pod-selector: "app.kubernetes.io/name=prometheus"

    hosts:
      - prometheus.costanza.cloud
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: prometheus-general-tls
        hosts:
          - prometheus.costanza.cloud

  prometheusSpec:
    externalUrl: https://prometheus.costanza.cloud

    retention: 7d
    retentionSize: "10GiB"

    replicas: 1

    logLevel: info
    resources: {}
    storageSpec: {}
